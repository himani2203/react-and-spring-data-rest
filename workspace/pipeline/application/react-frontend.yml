# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- none

pool:
  vmImage: ubuntu-latest

parameters:
- name: environment
  type: string
  values:
    - Development
    - Uat
    - Production
  default: Development
  displayName: 'Environment'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'Build frontend'
  inputs:
    command: 'custom'
    customCommand: 'react-scripts build'

# - task: Npm@1
#   displayName: 'Build frontend'
#   inputs:
#     command: 'run'
#     workingDir: $(System.DefaultWorkingDirectory)
#     arguments: 'build'

- task: Docker@2
  condition: succeeded()
  displayName: 'Docker Build'
  inputs:
    command: 'build'
    containerRegistry: 'DOCKER_ACR_PUSH_${{ parameters.environment }}' # Make sure you have service connection across environments
    repository: 'react'
    Dockerfile: '$(System.DefaultWorkingDirectory)/frontend/Dockerfile'
    tags: '000'

- task: Docker@2
  displayName: 'Docker Push'
  inputs:
    containerRegistry: 'DOCKER_ACR_PUSH_${{ parameters.environment }}'
    repository: 'react'
    command: 'push'
    tags: '000'