# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- none

pool:
  vmImage: ubuntu-latest

parameters:
- name: environment
  type: string
  values:
    - Development
    - Uat
    - Production
  default: Development
  displayName: 'Environment'

steps:

- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean install'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    checkStyleRunAnalysis: true
    pmdRunAnalysis: true
    findBugsRunAnalysis: true
    spotBugsRunAnalysis: true

- task: Docker@2
  condition: succeeded()
  displayName: 'Docker Build'
  inputs:
    command: 'build'
    containerRegistry: 'DOCKER_ACR_PUSH_${{ parameters.environment }}' # Make sure you have service connection across environments
    repository: 'springboot'
    Dockerfile: '$(System.DefaultWorkingDirectory)/backend/Dockerfile'
    tags: '000'

- task: Docker@2
  displayName: 'Docker Push'
  inputs:
    containerRegistry: 'DOCKER_ACR_PUSH_${{ parameters.environment }}'
    repository: 'springboot'
    command: 'push'
    tags: '000'